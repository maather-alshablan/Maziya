{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/noufalfakhri/Desktop/maziya/App.js\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Login, Registration } from \"./assets/screens\";\nexport default function App() {\n  var Stack = createStackNavigator();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"const [loading, setLoading] = useState(true) const [user, setUser] = useState(null)\", React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    initialRouteName: \"Login\",\n    Component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Registration\",\n    Component: Registration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  })));\n}\n{}","map":{"version":3,"sources":["/Users/noufalfakhri/Desktop/maziya/App.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","Login","Registration","App","Stack","loading","setLoading","user","setUser"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,KAAT,EAAiBC,YAAjB;AAIA,eAAe,SAASC,GAAT,GAAgB;AAE3B,MAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;;AAF2B,kBAIOF,QAAQ,CAAC,IAAD,CAJf;AAAA;AAAA,MAIhBO,OAJgB;AAAA,MAIPC,UAJO;;AAAA,mBAKCR,QAAQ,CAAC,IAAD,CALT;AAAA;AAAA,MAKhBS,IALgB;AAAA,MAKVC,OALU;;AAOvB,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAIA,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAG,OAArB;AAA6B,IAAA,gBAAgB,EAAC,OAA9C;AAAsD,IAAA,SAAS,EAAEP,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJA,CADF;AAYH;AAGH,CAcE","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Login , Registration } from './assets/screens'\n\n\n\nexport default function App () {\n  \n    const Stack = createStackNavigator();\n\n        const [loading, setLoading] = useState(true)\n        const [user, setUser] = useState(null)\n      \n        return (\n          <NavigationContainer>\n                    const [loading, setLoading] = useState(true)\n                    const [user, setUser] = useState(null)\n     \n          <Stack.Navigator >\n              <Stack.Screen name = 'Login' initialRouteName='Login' Component={Login}/>\n              <Stack.Screen name='Registration' Component={Registration} />\n           \n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n  \n\n  {/*}  <Stack.Navigator>\n        { user ? (\n          <Stack.Screen name=\"Home\">\n            {props => <HomeScreen {...props} extraData={user} />}\n          </Stack.Screen>\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}*/}\n"]},"metadata":{},"sourceType":"module"}